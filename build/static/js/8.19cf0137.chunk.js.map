{"version":3,"sources":["components/Modals/WithDrawModal.js","components/Modals/PaymentModal.js","pages/Dashboard.js","components/Typography/PageTitle.js","components/CTA.js","components/Cards/InfoCard.js","components/RoundIcon.js","../node_modules/classnames/index.js"],"names":["WithDrawModal","_ref","cb","totalWithdraw","isModalOpen","setIsModalOpen","useState","loading","setLoading","amount","setAmount","closeModal","initiateWithdraw","async","api","post","data","is_verified","then","res","toast","success","setTimeout","catch","err","console","log","finally","React","createElement","Button","disabled","onClick","Modal","isOpen","onClose","ModalHeader","ModalBody","Label","className","Input","type","value","onChange","e","target","name","placeholder","ModalFooter","layout","block","size","PaymentModal","address","network","paymentInfo","setPaymentInfo","method","voucher_code","voucher_type","files","setFiles","initiatePayment","formData","FormData","append","JSON","stringify","length","Array","from","forEach","file","history","useHistory","useEffect","push","Select","label","Fragment","concat","style","cursor","src","multiple","Dashboard","setData","withdrawals","setWithdrawals","toggle","setToggle","count","setCount","investmentAmount","setInvestmentAmount","setAddress","setNetwork","pendingAmount","setPendingAmount","withdrew","setWithdrew","withdrawCount","setwithdrawCount","allDonations","get","meta","pagination","total","user","setUser","withDrawals","getAggregate","reduce","accumulator","curValue","Number","attributes","userDetails","_res$data$data$attrib","getAddress","getIndustrial","filter","getCommercial","getResidential","getCommercialAggregate","getResidentialAggregate","aggregateInvestment","getInfo","getVerified","getUnVerified","getUnverifiedAggregate","aggregate","balance","PageTitle","CTA","InfoCard","title","RoundIcon","icon","PeopleIcon","iconColorClass","bgColorClass","MoneyIcon","CartIcon","ChatIcon","TableContainer","Table","TableHeader","TableCell","TableBody","map","i","TableRow","key","Badge","status","Date","publishedAt","toLocaleDateString","children","fill","viewBox","d","Card","CardBody","Icon","cls","classNames","hasOwn","hasOwnProperty","classes","arguments","arg","argType","isArray","inner","apply","call","join","module","exports","default"],"mappings":"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","file":"static/js/8.19cf0137.chunk.js","sourcesContent":["import {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    Label,\n    Input,\n  } from \"@windmill/react-ui\";\n  \n  import React from \"react\";\n  import { useState } from \"react\";\n  import { api } from \"../../utils/queries\";\n  import { toast } from \"react-toastify\";\n\nconst WithDrawModal = ({cb, totalWithdraw}) => {\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [amount, setAmount] = useState(0);\n    function openModal() {\n      setIsModalOpen(true);\n    }\n  \n    function closeModal() {\n      setIsModalOpen(false);\n    }\n\n    const initiateWithdraw = async () => {\n        setLoading(true);\n        await api\n          .post(\"/withdrawals\", {\n            data: { amount, is_verified:false },\n          })\n          .then((res) => {\n            toast.success(\"Your withdrawal has been placed\");\n            cb();\n            setTimeout(closeModal, 1000);\n            return res.data;\n          })\n          .catch((err) => console.log(err))\n          .finally(() => setLoading(false));\n      };\n  return (\n    <div>   <div>\n    <Button disabled={!totalWithdraw} onClick={openModal}>Withdraw</Button>\n  </div>\n\n  <Modal isOpen={isModalOpen} onClose={closeModal}>\n    <ModalHeader>Withdraw</ModalHeader>\n    <ModalBody>\n      <Label className=\"mt-4\">\n        <span>Amount</span>\n        <Input\n          className=\"mt-1\"\n          type=\"number\"\n          value={amount}\n          onChange={(e) => {\n            if(e.target.value > totalWithdraw){\n                return\n            }\n            setAmount(e.target.value)\n        }}\n          name=\"amount\"\n          placeholder=\"$100\"\n        />\n      </Label>\n      <span className='text-sm text-center text-red-600 mt-4' >Withdrawal amount is limited to your balance amount</span>\n    </ModalBody>\n    <ModalFooter>\n      {/* I don't like this approach. Consider passing a prop to ModalFooter\n       * that if present, would duplicate the buttons in a way similar to this.\n       * Or, maybe find some way to pass something like size=\"large md:regular\"\n       * to Button\n       */}\n      <div className=\"hidden sm:block\">\n        <Button layout=\"outline\" onClick={closeModal}>\n          Cancel\n        </Button>\n      </div>\n      <div className=\"hidden sm:block\">\n        <Button disabled={loading} onClick={initiateWithdraw}>\n          {loading ? \"Loading\" : \"Confirm Withdrawal\"}\n        </Button>\n      </div>\n      <div className=\"block w-full sm:hidden\">\n        <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\n          Cancel\n        </Button>\n      </div>\n      <div className=\"block w-full sm:hidden\">\n        <Button disabled={loading} onClick={initiateWithdraw} block size=\"large\">\n          {loading ? \"Loading\" : \"Confirm Withdrawal\"}\n        </Button>\n      </div>\n    </ModalFooter>\n  </Modal></div>\n  )\n}\n\nexport default WithDrawModal","import React from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Label,\n  Input,\n  Select,\n} from \"@windmill/react-ui\";\nimport { useState } from \"react\";\nimport { api } from \"../../utils/queries\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PaymentModal = ({ cb, address, network }) => {\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [paymentInfo, setPaymentInfo] = useState({\n    amount: 0,\n    method: \"\",\n    is_verified: false,\n    voucher_code: \"\",\n    voucher_type: \"\",\n  });\n  const [files, setFiles] = useState([]);\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  const onChange = (e) => {\n    if (e.target.name == \"method\") {\n      setPaymentInfo({\n        ...{\n          amount: 0,\n          is_verified: false,\n          voucher_code: \"\",\n          voucher_type: \"\",\n        },\n        [e.target.name]: e.target.value,\n      });\n      return;\n    }\n    setPaymentInfo({\n      ...paymentInfo,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const initiatePayment = async () => {\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"data\", JSON.stringify({ ...paymentInfo }));\n\n    if (files.length) {\n      Array.from(files).forEach((file) => {\n        formData.append(`files.receipt`, file, file.name);\n      });\n    }\n    await api\n      .post(\"/donations\", formData)\n      .then((res) => {\n        toast.success(\"Desposit made\");\n        cb();\n        setTimeout(closeModal, 1000);\n        return res.data;\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoading(false));\n  };\n\n  const handleFile = (e) => {\n    setFiles(e.target.files);\n  };\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (paymentInfo.method == \"gift card\") {\n      history.push(\"/app/payments\");\n    }\n  }, [paymentInfo.method]);\n\n  return (\n    <div>\n      <div>\n        <Button onClick={openModal}>Add Funds</Button>\n      </div>\n\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <ModalHeader>Make Deposit</ModalHeader>\n        <ModalBody>\n          Please specify the amount to be deposited and provide proof of payment\n          if available{\" \"}\n          {paymentInfo.method == \"usd\"\n            ? \"and pay into the address below before confirming payment\"\n            : null}\n          <Label className=\"mt-4\">\n            <span>Mode of Payment</span>\n            <Select\n              placeholder=\"Select mode of payment\"\n              onChange={onChange}\n              value={paymentInfo.method}\n              name=\"method\"\n              className=\"mt-1 p-2 border rounded-sm\"\n            >\n              <option></option>\n              <option\n              label=\"Gift Card -(Most popular 7 minutes 0% fee) \">gift card\n              </option>\n              <option \n              label=\"USDT (Tether) - Deposit USDT From Crypto wallet to your Exa account\n              2 minutes 0% fee Up to € 1,000,000 daily deposit limit\">usd </option>\n            </Select>\n          </Label>\n          {paymentInfo.method ? (\n            <>\n              {paymentInfo.method == \"usd\" ? (\n                <>\n                  <p className=\" text-sm mt-4 \">Wallet address</p>\n                  <p className=\" text-lg mt-2 font-bold\">{address}</p>\n                  <p className=\" text-sm mt-4 \">Network</p>\n                  <p className=\" text-lg mt-2 font-bold\">{network}</p>\n                </>\n              ) : null}\n              {paymentInfo.method == \"gift card\" ? (\n                <>\n                  <p className=\" text-sm mt-4 text-center\">\n                    Please select your gift card type by clicking one of the\n                    cards below\n                  </p>\n                  <div className=\"grid grid-cols-3 gap-4 mt-4 \">\n                    <div\n                      className={`flex justify-center max-h-20 p-4 cursor-pointer \n                        ${\n                          paymentInfo.voucher_type == \"play store\"\n                            ? \"bg-red\"\n                            : \"\"\n                        }`}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        setPaymentInfo({\n                          ...paymentInfo,\n                          voucher_type: \"play store\",\n                        })\n                      }\n                    >\n                      <img\n                        src=\"/img/play-store.jpg\"\n                        className=\"h-full rounded-sm\"\n                      />\n                    </div>\n                    <div\n                      className={`flex justify-center max-h-20 p-4 cursor-pointer \n                    ${paymentInfo.voucher_type == \"steam\" ? \"bg-red\" : \"\"}`}\n                      onClick={() =>\n                        setPaymentInfo({\n                          ...paymentInfo,\n                          voucher_type: \"steam\",\n                        })\n                      }\n                    >\n                      <img src=\"/img/steam.png\" className=\"h-full rounded-sm\" />\n                    </div>\n                    <div\n                      className={`flex justify-center max-h-20 p-4 cursor-pointer \n                    ${\n                      paymentInfo.voucher_type == \"american express\"\n                        ? \"bg-red\"\n                        : \"\"\n                    }`}\n                      onClick={() =>\n                        setPaymentInfo({\n                          ...paymentInfo,\n                          voucher_type: \"american express\",\n                        })\n                      }\n                    >\n                      <img\n                        src=\"/img/express.png\"\n                        className=\"h-full rounded-sm\"\n                      />\n                    </div>\n                  </div>\n                </>\n              ) : null}\n\n              {(paymentInfo.method == \"gift card\" &&\n                paymentInfo.voucher_type) ||\n              paymentInfo.method == \"usd\" ? (\n                <>\n                  <Label className=\"mt-4\">\n                    <span>Amount</span>\n                    <Input\n                      className=\"mt-1\"\n                      type=\"number\"\n                      onChange={onChange}\n                      name=\"amount\"\n                      placeholder=\"$100\"\n                    />\n                  </Label>\n                  {/* <p className=\"text-lg my-4 font-semibold\"> Upload images</p> */}\n                  <p className=\" my-4 font-semibold\">\n                    Upload payment proof if available\n                  </p>\n                  <Button layout=\"outline\">\n                    <input\n                      type=\"file\"\n                      name=\"receipt\"\n                      className=\"\"\n                      onChange={handleFile}\n                      multiple\n                    />\n                  </Button>\n                </>\n              ) : null}\n            </>\n          ) : null}\n        </ModalBody>\n        <ModalFooter>\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\n           * that if present, would duplicate the buttons in a way similar to this.\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\n           * to Button\n           */}\n          <div className=\"hidden sm:block\">\n            <Button layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"hidden sm:block\">\n            <Button onClick={initiatePayment}>\n              {loading ? \"Loading\" : \"Confirm payment\"}\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button onClick={initiatePayment} block size=\"large\">\n              {loading ? \"Loading\" : \"Confirm payment\"}\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PaymentModal;\n","import React, { useState, useEffect } from \"react\";\n\nimport CTA from \"../components/CTA\";\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../icons\";\nimport {\n  Button,\n} from \"@windmill/react-ui\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { api } from \"../utils/queries\";\nimport WithDrawModal from \"../components/Modals/WithDrawModal\";\nimport PaymentModal from \"../components/Modals/PaymentModal\";\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [withdrawals, setWithdrawals] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [loading, setLoading] = useState([]);\n  const [count, setCount] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const [investmentAmount, setInvestmentAmount] = useState(0);\n  const [address, setAddress] = useState('')\n  const [network, setNetwork] = useState('')\n  const [pendingAmount, setPendingAmount] = useState(0);\n  const [withdrew, setWithdrew] = useState(0);\n  const [withdrawCount, setwithdrawCount] = useState(0);\n;\n\n\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  // useEffect(() => {\n  //   setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  // }, [page]);\n\n  const aggregate = async () => {\n    setLoading(true)\n    await api\n      .get(\"/donations?pagination[pageSize]=\" + count +'&fields[0]=amount&fields[1]=is_verified')\n      .then((res) => {\n        const getVerified = res.data.data.filter((res)=>res.attributes.is_verified)\n        const getUnVerified = res.data.data.filter((res)=>!res.attributes.is_verified)\n        const getAggregate = getVerified.reduce(function (\n          accumulator,\n          curValue\n        ) {\n          return accumulator + Number(curValue.attributes.amount);\n        },\n        0);\n        const getUnverifiedAggregate = getUnVerified.reduce(function (\n          accumulator,\n          curValue\n        ) {\n          return accumulator + Number(curValue.attributes.amount);\n        },\n        0);\n       setAmount(getAggregate)\n       setPendingAmount(getUnverifiedAggregate)\n      })\n      .catch((err) => console.log(err))\n      .finally(()=>setLoading(false))\n  };\n  const allDonations = async () => {\n    setLoading(true)\n    await api\n      .get(\"/donations\")\n      .then((res) => {\n        setData(res.data.data)\n        setCount(res.data.meta.pagination.total)\n      })\n      .catch((err) => console.log(err))\n      .finally(()=>setLoading(false))\n      ;\n  };\n\n  const [user, setUser] = useState({});\n\n\n  const aggregateInvestment = async () => {\n    setLoading(true)\n    await api\n      .get(\"/investments?pagination[pageSize]=\" + '1000' +'&fields[0]=amount&fields[1]=type')\n      .then((res) => {\n        const getIndustrial = res.data.data.filter((res)=>res.attributes.type == 'industrial')\n        const getCommercial = res.data.data.filter((res)=>res.attributes.type == 'commercial')\n        const getResidential = res.data.data.filter((res)=>res.attributes.type == 'residential')\n        const getAggregate = getIndustrial.reduce(function (\n          accumulator,\n          curValue\n        ) {\n          return accumulator + Number(curValue.attributes.amount);\n        },\n        0);\n        const getCommercialAggregate = getCommercial.reduce(function (\n          accumulator,\n          curValue\n        ) {\n          return accumulator + Number(curValue.attributes.amount);\n        },\n        0);\n        const getResidentialAggregate = getResidential.reduce(function (\n          accumulator,\n          curValue\n        ) {\n          return accumulator + Number(curValue.attributes.amount);\n        },\n        0);\n       setInvestmentAmount(getAggregate + getCommercialAggregate + getResidentialAggregate)\n      })\n      .catch((err) => console.log(err))\n      .finally(()=>setLoading(false))\n  };\n\n  const withDrawals = async () => {\n    setLoading(true)\n    await api\n      .get(\"/withdrawals\")\n      .then((res) => {\n        const getAggregate = res.data.data.reduce(function (\n          accumulator,\n          curValue\n        ) {\n          return accumulator + Number(curValue.attributes.amount);\n        },\n        0);\n        setWithdrew(getAggregate)\n        setWithdrawals(res.data.data)\n        setwithdrawCount(res.data.meta.pagination.total)\n      })\n      .catch((err) => console.log(err))\n      .finally(()=>setLoading(false))\n      ;\n  };\n\n\n  const getAddress = async () => {\n \n    await api\n      .get(\"/address\")\n      .then((res) => {\n        setAddress(res.data.data.attributes.address)\n        setNetwork(res.data.data.attributes?.network || '')\n      })\n      .catch((err) => console.log(err))\n      ;\n  };\n\n\n  const userDetails = async () => {\n    await api\n      .get(\"/users/me\")\n      .then((res) => {\n        setUser(res.data)\n        return res;\n      })\n      .catch((err) => {\n\n      });\n  };\n\n  useEffect(() => {\n    userDetails();\n  }, []);\n\n  useEffect(() => {\n    getAddress()\n    allDonations();\n    withDrawals()\n    aggregateInvestment()\n  }, []);\n\n  const getInfo = () =>{\n    allDonations()\n    userDetails()\n    withDrawals()\n  }\n\n  useEffect(() => {\n    if(count){\n      aggregate();\n    }\n  }, [count]);\n\n\n  console.log(Number(user?.balance))\n  return (\n    <>\n      <PageTitle>DASHBOARD</PageTitle>\n\n      <CTA />\n      \n\n      {/* <!-- Cards --> */}\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"COURSES PURCHASED\" value={count}>\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"BALANCE\" value={!user?.balance ? '$0' : \"$\" + (user?.balance)}>\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"ACHIEVE COURSES\" value={'$' + pendingAmount}>\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"WITHDRAWALS\" value={withdrawCount}>\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n      <div className=\"flex gap-3 justify-between\">\n        {/* <GiftCardModal cb={getInfo} /> */}\n        <div className=\"flex gap-3\">\n        <PaymentModal address={address} network={network} cb={getInfo} />\n        <WithDrawModal totalWithdraw={user?.balance ? Number(user?.balance) : 0} cb={getInfo} />\n        </div>\n        <Button  onClick={()=>setToggle(!toggle)}>\n         {!toggle ? 'View withdrawals' : 'View Deposits'}\n        </Button>\n      </div>\n      {\n        !toggle ?       <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Payment-Method</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.attributes.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.attributes.is_verified ? 'verified' : 'pending'}</Badge>\n                </TableCell>\n                <TableCell>\n                  <Badge type={\"pending\"}>{user.attributes.method}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.attributes.publishedAt).toLocaleDateString()}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n      </TableContainer> :       <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {withdrawals.map((user, i) => (\n              <TableRow key={i}>\n           \n                <TableCell>\n                  <span className=\"text-sm\">$ {user.attributes.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.attributes.is_verified ? 'verified' : 'pending'}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.attributes.publishedAt).toLocaleDateString()}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n  \n      </TableContainer>\n      }\n\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React from 'react'\n\nfunction CTA() {\n  return (\n    <span\n      className=\"flex items-center justify-between p-4 mb-8 text-sm font-semibold text-white bg-custom-red-600 rounded-lg shadow-md focus:outline-none focus:shadow-outline-purple\"\n    >\n      <div className=\"flex items-center\">\n        <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\n        </svg>\n        <span>Welcome to your TechTime dashboard</span>\n      </div>\n      {/* <span>\n        View more <span dangerouslySetInnerHTML={{ __html: '&RightArrow;' }}></span>\n      </span> */}\n    </span>\n  )\n}\n\nexport default CTA\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-custom-red-100 dark:bg-custom-red-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}